{#
/**
 * @file
 * Default theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @ingroup themeable
 */
#}
<article{{ attributes }}>
  {{content.field_benefits}}
  <div class="w-full my-10 bg-white">
    <div class="flex flex-col items-center align-middle md:flex-row">
      <div class="h-full md:w-1/2 image-service-col">
        {{content.field_main_image}}
      </div>
      <div class="flex flex-col items-center justify-around gap-4 p-4 align-middle md:w-1/2">
        <h2 class="mb-4 text-3xl font-medium">{{label}}</h2>
        <p class="text-gray-700">{{content.body.0}}</p>
        <div class="price">
            {% if node.field_discount.value == 1  %}
              {% set percentage = 1 - (node.field_sale_percentage.value / 100)  %}
              {% set final_value = node.field_price.value * percentage %}
              <p>Antes <span class="text-sm text-gray-400 line-through">$ {{ node.field_price.value }} USD</span></p>
            {% else %}
              {% set final_value = node.field_price.value %}
            {% endif %}
            <h2 class="text-2xl">{{node.field_unit.value}} / <span class="text-4xl font-bold text-blue-700">$ {{final_value}} USD</span></h2>
          </div>
          <a href="#" class="w-full mt-3 text-xl text-center btn btn-primary-red openServiceModalBtn">
            Cotizar ahora
          </a>
        </div>
      </div>
  </div>
  <div class="flex justify-center my-5">
    <div class="text-center">
      <h2 class="my-4 text-4xl text-center text-blue-800">Caracter√≠sticas</h2>
      <ul class="flex flex-col gap-5 px-2 text-justify list-disc">
        {% for item in node.field_feature %}
          <li class="text-lg">{{item.value}}</li>
        {% endfor %}
      </ul>    
    </div>
  </div>
</article>
